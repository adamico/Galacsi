- if can?(:read, fiche)
  %div{:class => ["fiche", (fiche.state == "valide") ? "valide" : "non_valide"]}
    - fiche_header(fiche)

    .resume
      %h3 Résumé

      - unless fiche.passage_lait.blank?
        %p.retrait
          %b Passage dans le lait :
          = fiche.passage_lait

      - if fiche.risque_accumulation?
        %p.retrait
          %b= "Risque d'accumulation dans le lait"
      - if fiche.risque_dim_lactation?
        %p.retrait
          %b= "Risque théorique de diminution de la lactation"

      %h4 Recul :
      .retrait= textilize(fiche.ei)
      - if fiche.ei_theoriques?
        %p.retrait= "Risque théorique :"
        .retrait= textilize(fiche.ei_theoriques)

      - if fiche.conditions?
        %p.retrait
          %b Allaitement possible si :
          = fiche.conditions

      - if fiche.surveillance?
        %p.retrait
          %b Surveillance :
          = fiche.surveillance
        %p.surveillance
          La poursuite du traitement ou de l'allaitement doit être reconsidéré et le CRPV prévenu si l'un des troubles cités est observé

      - unless fiche.alternatives.blank?
        %p.retrait
          %b Alternatives :
        %ul
          - fiche.alternatives.each do |a|
            - link = !a.commercial_names.blank? ? "#{a.name} (#{a.commercial_names})" : "#{a.name}"
            %li
              = link_to link, dci_path(a)

      - unless fiche.arg_autre.blank?
        %p.retrait
          %b Autres argumentaires :
          = fiche.arg_autre

      - if fiche.suivi == "oui"
        %p.alert
          %b Attention :
          pour cette molécule un suivi sera réalisé par le CRPV, il est donc impératif de demander les coordonnées du demandeur ou
          %u mieux de la patiente concernée.

    %p= link_to_toggle_div "Montrer/Cacher les informations détaillées", "argumentaire_#{fiche.id}"

    %div{:class => "argumentaire", :id => "argumentaire_#{fiche.id}", :style => "display: none;"}
      %h3 Données détaillées
      %table
        %tr
          - unless fiche.biodisponibilite.blank?
            %th Biodisponibilité (PO)
            %td= fiche.biodisponibilite
          - unless fiche.vol_dist.blank?
            %th Vd
            %td= fiche.vol_dist
          - unless fiche.liaison_pp.blank?
            %th Liaison aux PP
            %td= fiche.liaison_pp
          - unless fiche.thalf.blank?
            %th T1/2
            %td= fiche.thalf
        %tr
          - unless fiche.metabolites_actifs.blank?
            %th Métabolites actifs
            %td= fiche.metabolites_actifs? ? "Oui" : "Non"
          - unless fiche.rapport_lp.blank?
            %th Rapport lait/plasma
            %td= fiche.rapport_lp
          - unless fiche.pic_lacte.blank?
            %th Pic lacté
            %td= fiche.pic_lacte
        %tr
          - unless fiche.dose_par_rapport_dmap.blank? and fiche.dose_par_rapport_dp.blank?
            %th Dose estimée ingérée par l'enfant
            %td
              %ul
                %li= "#{fiche.dose_par_rapport_dmap} de la DMAP" if fiche.dose_par_rapport_dmap?
                - if fiche.dose_par_rapport_dp?
                  %li= "#{fiche.dose_par_rapport_dp} de la posologie pédiatrique"
          - unless fiche.poso_pedia_dose.blank? and fiche.poso_pedia_des.blank?
            %th Posologie pédiatrique
            %td
              = fiche.poso_pedia_dose
              = "a partir de #{fiche.poso_pedia_des}" if fiche.poso_pedia_des?

    - unless fiche.sources.blank?
      %p
        %b Sources :
        = fiche.sources.map(&:name).join(', ')

    .fiche_footer
      - if can? :create, Fiche
        .validation
          %table{:style => "width:100%;"}
            %tr
              %td
                %b Etat de validation :
                %span{:class => "#{fiche.state}"}= fiche.state.humanize
                - if fiche.state == "brouillon" && can?(:initialiser, Fiche)
                  = link_to "=> Initialiser", initialiser_dci_fiche_path(fiche.dci, fiche), :method => :put
                - elsif fiche.state == "valide" && can?(:invalider, Fiche)
                  = link_to "=> Mettre en attente", invalider_dci_fiche_path(fiche.dci, fiche), :method => :put
                - elsif (fiche.state == "a_valider" || fiche.state == "en_attente") && can?(:valider, fiche)
                  = link_to "=> Valider", valider_dci_fiche_path(fiche.dci, fiche), :method => :put

              - if fiche.validation_date? && fiche.state == 'valide'
                %td
                  %b Date de dernière MAJ :
                  = l(fiche.validation_date)
                  - if can? :maj_date, Fiche
                    = link_to("=> Mettre à jour", maj_date_dci_fiche_path(fiche.dci, fiche), :method => :put) unless fiche.validation_date == Time.now.to_date

              - if fiche.user_id?
                %td
                  %b Fiche crée par :
                  = "#{fiche.createur} (#{fiche.user.role})"

      .clear
      %ul.edit_actions
        %li= link_to("Modifier cette fiche", edit_dci_fiche_path(fiche.dci, fiche)) if can? :update, fiche
        %li= link_to("Détruire cette fiche", [fiche.dci, fiche], {:confirm => 'Etes-vous sûr ?', :method => :delete}) if can? :destroy, fiche
      .clear
